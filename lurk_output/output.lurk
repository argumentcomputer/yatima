(letrec
 ((getelem
   (lambda (xs n) (if (= n 0) (car xs) (getelem (cdr xs) (- n 1)))))
  (Nat (cons "Nat" (cons 0 (cons 0 nil))))
  (Nat_zero 0)
  (Nat_succ (lambda (n) (+ n 1)))
  (Nat_rec
   (lambda (motive zero succ _t)
    (if (= _t 0)
     zero
     (succ (- _t 1) (Nat_rec motive zero succ (- _t 1))))))
  (Nat_add (lambda (_x_lurk_1 _x_lurk_2) (+ _x_lurk_1 _x_lurk_2)))
  (Nat_mul (lambda (_x_lurk_1 _x_lurk_2) (* _x_lurk_1 _x_lurk_2)))
  (Nat_div
   (lambda (_x_lurk_1 _x_lurk_2)
    (if (< _x_lurk_1 _x_lurk_2)
     0
     (+ (Nat_div (- _x_lurk_1 _x_lurk_2) _x_lurk_2) 1))))
  (Nat_decLe
   (lambda (_x_lurk_1 _x_lurk_2)
    (if (<= _x_lurk_1 _x_lurk_2)
     (quote (("Decidable" 1 0) 1 ("Nat.le" 1 1) _T))
     (quote (("Decidable" 1 0) 0 ("Nat.le" 1 1) _T)))))
  (List (lambda (:1) (cons "List" (cons 1 (cons 0 nil)))))
  (List_rec
   (lambda (:1 motive _nil _cons _t)
    (if (= (car (cdr _t)) 0)
     ((lambda (:1 motive _nil _cons) _nil) :1 motive _nil _cons)
     (if (= (car (cdr _t)) 1)
      ((lambda (:1 motive _nil _cons head tail)
        (_cons head tail (List_rec :1 motive _nil _cons tail))) :1
       motive
       _nil
       _cons
       (getelem (cdr (cdr _t)) (+ 0 (getelem (car _t) 1)))
       (getelem (cdr (cdr _t)) (+ 1 (getelem (car _t) 1))))
      nil))))
  (List_nil (lambda (:1) (cons (List :1) (cons 0 (cons :1 nil)))))
  (List_cons
   (lambda (:1 head tail)
    (cons (List :1) (cons 1 (cons :1 (cons head (cons tail nil)))))))
  (List_casesOn
   (lambda (:1 motive _t _nil _cons)
    (List_rec :1
     motive
     _nil
     (lambda (head tail tail_ih) (_cons head tail))
     _t)))
  (OfNat_ofNat
   (lambda (:1 x__40_Init_Prelude__hyg_1828 self)
    (getelem (cdr (cdr self))
     (+ (+ (getelem (car self) 1) (getelem (car self) 2)) 0))))
  (OfNat
   (lambda (:1 x__40_Init_Prelude__hyg_1828)
    (cons "OfNat" (cons 2 (cons 0 nil)))))
  (OfNat_rec
   (lambda (:1 x__40_Init_Prelude__hyg_1828 motive mk _t)
    (if (= (car (cdr _t)) 0)
     ((lambda (:1 x__40_Init_Prelude__hyg_1828 motive mk _uncap_ofNat)
       (mk _uncap_ofNat)) :1
      x__40_Init_Prelude__hyg_1828
      motive
      mk
      (getelem (cdr (cdr _t)) (+ 0 (getelem (car _t) 1))))
     nil)))
  (OfNat_mk
   (lambda (:1 x__40_Init_Prelude__hyg_1828 _uncap_ofNat)
    (cons (OfNat :1 x__40_Init_Prelude__hyg_1828)
     (cons 0
      (cons :1
       (cons x__40_Init_Prelude__hyg_1828
        (cons _uncap_ofNat nil)))))))
  (instOfNatNat (lambda (n) (OfNat_mk Nat n n)))
  (HAdd_hAdd
   (lambda (:1 :2 :3 self)
    (getelem (cdr (cdr self))
     (+ (+ (getelem (car self) 1) (getelem (car self) 2)) 0))))
  (HAdd (lambda (:1 :2 :3) (cons "HAdd" (cons 3 (cons 0 nil)))))
  (HAdd_rec
   (lambda (:1 :2 :3 motive mk _t)
    (if (= (car (cdr _t)) 0)
     ((lambda (:1 :2 :3 motive mk _uncap_hAdd) (mk _uncap_hAdd)) :1
      :2
      :3
      motive
      mk
      (getelem (cdr (cdr _t)) (+ 0 (getelem (car _t) 1))))
     nil)))
  (HAdd_mk
   (lambda (:1 :2 :3 _uncap_hAdd)
    (cons (HAdd :1 :2 :3)
     (cons 0 (cons :1 (cons :2 (cons :3 (cons _uncap_hAdd nil))))))))
  (Add_add
   (lambda (:1 self)
    (getelem (cdr (cdr self))
     (+ (+ (getelem (car self) 1) (getelem (car self) 2)) 0))))
  (instHAdd
   (lambda (:1 inst__40_Init_Prelude__hyg_2386)
    (HAdd_mk :1
     :1
     :1
     (lambda (a b)
      (Add_add :1 inst__40_Init_Prelude__hyg_2386 a b)))))
  (Add (lambda (:1) (cons "Add" (cons 1 (cons 0 nil)))))
  (Add_rec
   (lambda (:1 motive mk _t)
    (if (= (car (cdr _t)) 0)
     ((lambda (:1 motive mk _uncap_add) (mk _uncap_add)) :1
      motive
      mk
      (getelem (cdr (cdr _t)) (+ 0 (getelem (car _t) 1))))
     nil)))
  (Add_mk
   (lambda (:1 _uncap_add)
    (cons (Add :1) (cons 0 (cons :1 (cons _uncap_add nil))))))
  (instAddNat (Add_mk Nat Nat_add))
  (my_length
   (lambda (xs)
    (List_casesOn Nat
     (lambda (x__40__hyg_25) Nat)
     xs
     (OfNat_ofNat ((lambda (x__40__hyg_25) Nat) (List_nil Nat))
      0
      (instOfNatNat 0))
     (lambda (n x__40__hyg_33)
      (HAdd_hAdd Nat
       ((lambda (x__40__hyg_25) Nat) (List_cons Nat n x__40__hyg_33))
       Nat
       (instHAdd Nat instAddNat)
       n
       (OfNat_ofNat ((lambda (x__40__hyg_25)
          Nat) (List_cons Nat n x__40__hyg_33))
        1
        (instOfNatNat 1)))))))
  (map
   (List_cons Nat
    (OfNat_ofNat Nat 1 (instOfNatNat 1))
    (List_cons Nat
     (OfNat_ofNat Nat 2 (instOfNatNat 2))
     (List_nil Nat))))
  (root (my_length map)))
 (current-env))